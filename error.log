2025-05-18T00:47:02.030Z - SyntaxError: Bad control character in string literal in JSON at position 28 (line 1 column 29)
    at JSON.parse (<anonymous>)
    at parse (/Users/bayarbileg/Projects/ai-assistant/node_modules/body-parser/lib/types/json.js:92:19)
    at /Users/bayarbileg/Projects/ai-assistant/node_modules/body-parser/lib/read.js:128:18
    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)
    at invokeCallback (/Users/bayarbileg/Projects/ai-assistant/node_modules/raw-body/index.js:238:16)
    at done (/Users/bayarbileg/Projects/ai-assistant/node_modules/raw-body/index.js:227:7)
    at IncomingMessage.onEnd (/Users/bayarbileg/Projects/ai-assistant/node_modules/raw-body/index.js:287:7)
    at IncomingMessage.emit (node:events:507:28)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)
2025-05-18T00:47:14.898Z - SyntaxError: Bad control character in string literal in JSON at position 28 (line 1 column 29)
    at JSON.parse (<anonymous>)
    at parse (/Users/bayarbileg/Projects/ai-assistant/node_modules/body-parser/lib/types/json.js:92:19)
    at /Users/bayarbileg/Projects/ai-assistant/node_modules/body-parser/lib/read.js:128:18
    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)
    at invokeCallback (/Users/bayarbileg/Projects/ai-assistant/node_modules/raw-body/index.js:238:16)
    at done (/Users/bayarbileg/Projects/ai-assistant/node_modules/raw-body/index.js:227:7)
    at IncomingMessage.onEnd (/Users/bayarbileg/Projects/ai-assistant/node_modules/raw-body/index.js:287:7)
    at IncomingMessage.emit (node:events:507:28)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)
2025-05-18T00:53:12.030Z - SyntaxError: Bad control character in string literal in JSON at position 28 (line 1 column 29)
    at JSON.parse (<anonymous>)
    at parse (/Users/bayarbileg/Projects/ai-assistant/node_modules/body-parser/lib/types/json.js:92:19)
    at /Users/bayarbileg/Projects/ai-assistant/node_modules/body-parser/lib/read.js:128:18
    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)
    at invokeCallback (/Users/bayarbileg/Projects/ai-assistant/node_modules/raw-body/index.js:238:16)
    at done (/Users/bayarbileg/Projects/ai-assistant/node_modules/raw-body/index.js:227:7)
    at IncomingMessage.onEnd (/Users/bayarbileg/Projects/ai-assistant/node_modules/raw-body/index.js:287:7)
    at IncomingMessage.emit (node:events:507:28)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)
2025-06-16T20:08:41.915Z [LOG] 16.06.2025, 22:08:41.915: [SRV] Telegram logging bot initialized for admin chat.
2025-06-16T20:08:41.925Z [LOG] 16.06.2025, 22:08:41.925: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-16T20:08:41.926Z [LOG] 16.06.2025, 22:08:41.926: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-17T23:22:36.412Z [LOG] 18.06.2025, 01:22:36.412: [SRV] Telegram logging bot initialized for admin chat.
2025-06-17T23:22:36.420Z [LOG] 18.06.2025, 01:22:36.420: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-17T23:22:36.421Z [LOG] 18.06.2025, 01:22:36.420: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-17T23:23:25.773Z [LOG] 18.06.2025, 01:23:25.773: [SRV] Telegram logging bot initialized for admin chat.
2025-06-17T23:23:25.781Z [LOG] 18.06.2025, 01:23:25.780: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-17T23:23:25.781Z [LOG] 18.06.2025, 01:23:25.781: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-17T23:29:08.967Z [LOG] 18.06.2025, 01:29:08.966: [SRV] Telegram logging bot initialized for admin chat.
2025-06-17T23:29:08.975Z [LOG] 18.06.2025, 01:29:08.974: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-17T23:29:08.974Z [LOG] 18.06.2025, 01:29:08.974: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-17T23:30:31.590Z [LOG] 18.06.2025, 01:30:31.589: [SRV] Telegram logging bot initialized for admin chat.
2025-06-17T23:30:31.598Z [LOG] 18.06.2025, 01:30:31.598: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-17T23:30:31.598Z [LOG] 18.06.2025, 01:30:31.598: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-17T23:43:30.435Z [LOG] 18.06.2025, 01:43:30.434: [BOT] Photo received from chatId 1931272012
2025-06-17T23:43:30.477Z [LOG] 18.06.2025, 01:43:30.477: [BOT] Using command for photo: "Process this image"
2025-06-17T23:43:30.819Z [LOG] 18.06.2025, 01:43:30.819: Received command: Process this image
2025-06-17T23:43:30.821Z [ERROR] FATAL: Failed to load database schema DDL: {}
2025-06-17T23:43:30.821Z [LOG] 18.06.2025, 01:43:30.821: [IMG] Received file: telegram-image-1750203810478.jpg, MIME type: image/jpeg, Saved at: uploads/1750203810728-telegram-image-1750203810478.jpg
2025-06-17T23:43:30.822Z [LOG] 18.06.2025, 01:43:30.821: [IMG] File is already JPEG. Using as is: uploads/1750203810728-telegram-image-1750203810478.jpg
2025-06-17T23:43:30.824Z [LOG] 18.06.2025, 01:43:30.824: Sending command to OpenAI for action decision...
2025-06-17T23:43:37.540Z [LOG] 18.06.2025, 01:43:37.539: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_gDk7dbXmW9D1k7uaLOQJFhZb",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\n  \"action\": \"create_transaction\",\n  \"transaction\": {\n    \"shop\": \"REWE Altenhöferallee/Riedbergallee, Frankfurt\",\n    \"date\": \"2025-06-16\",\n    \"time\": \"13:51:00\",\n    \"total\": 2.48,\n    \"currency\": \"EUR\",\n    \"discount\": null,\n    \"items\": [\n      {\n        \"name\": \"Mio Mate Ginger\",\n        \"quantity\": 2,\n        \"price\": 1.09,\n        \"category\": \"groceries\"\n      },\n      {\n        \"name\": \"Pfand\",\n        \"quantity\": 2,\n        \"price\": 0.15,\n        \"category\": \"groceries\"\n      }\n    ]\n  }\n}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-17T23:43:37.541Z [LOG] 18.06.2025, 01:43:37.540: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_gDk7dbXmW9D1k7uaLOQJFhZb","type":"function","function":{"name":"handle_natural_command","arguments":"{\n  \"action\": \"create_transaction\",\n  \"transaction\": {\n    \"shop\": \"REWE Altenhöferallee/Riedbergallee, Frankfurt\",\n    \"date\": \"2025-06-16\",\n    \"time\": \"13:51:00\",\n    \"total\": 2.48,\n    \"currency\": \"EUR\",\n    \"discount\": null,\n    \"items\": [\n      {\n        \"name\": \"Mio Mate Ginger\",\n        \"quantity\": 2,\n        \"price\": 1.09,\n        \"category\": \"groceries\"\n      },\n      {\n        \"name\": \"Pfand\",\n        \"quantity\": 2,\n        \"price\": 0.15,\n        \"category\": \"groceries\"\n      }\n    ]\n  }\n}"}}],"refusal":null,"annotations":[]}
2025-06-17T23:43:37.541Z [LOG] 18.06.2025, 01:43:37.541: Parsed Args {"action":"create_transaction","transaction":{"shop":"REWE Altenhöferallee/Riedbergallee, Frankfurt","date":"2025-06-16","time":"13:51:00","total":2.48,"currency":"EUR","discount":null,"items":[{"name":"Mio Mate Ginger","quantity":2,"price":1.09,"category":"groceries"},{"name":"Pfand","quantity":2,"price":0.15,"category":"groceries"}]}}
2025-06-17T23:43:37.542Z [LOG] 18.06.2025, 01:43:37.542: AI Decision (Validated): {
  "action": "create_transaction",
  "transaction": {
    "shop": "REWE Altenhöferallee/Riedbergallee, Frankfurt",
    "date": "2025-06-16",
    "time": "13:51:00",
    "total": 2.48,
    "currency": "EUR",
    "discount": null,
    "items": [
      {
        "name": "Mio Mate Ginger",
        "quantity": 2,
        "price": 1.09,
        "category": "groceries"
      },
      {
        "name": "Pfand",
        "quantity": 2,
        "price": 0.15,
        "category": "groceries"
      }
    ]
  }
}
2025-06-17T23:43:37.542Z [LOG] 18.06.2025, 01:43:37.542: Executing step 1 with action: create_transaction
2025-06-17T23:43:37.542Z [LOG] 18.06.2025, 01:43:37.542: Executing create_transaction
2025-06-17T23:43:37.554Z [LOG] 18.06.2025, 01:43:37.554: ✅ Created transaction: REWE Altenhöferallee/Riedbergallee, Frankfurt - 2.48 EUR (ID: 87)
2025-06-17T23:43:37.555Z [LOG] 18.06.2025, 01:43:37.554: Results before serialization: [
  {
    "success": true,
    "message": "✅ Added transaction for REWE Altenhöferallee/Riedbergallee, Frankfurt on 2025-06-16 in EUR for total of 2.48 EUR. Synced to both databases (Original ID: undefined, Firefly ID: undefined)"
  }
]
2025-06-17T23:43:37.555Z [LOG] 18.06.2025, 01:43:37.555: Sanitized results for interpreter: [
  {
    "success": true,
    "message": "✅ Added transaction for REWE Altenhöferallee/Riedbergallee, Frankfurt on 2025-06-16 in EUR for total of 2.48 EUR. Synced to both databases (Original ID: undefined, Firefly ID: undefined)",
    "error": null,
    "event": null,
    "data": null,
    "query": null,
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": null,
    "total": null,
    "result": null,
    "message_id": null
  }
]
2025-06-17T23:43:37.556Z [LOG] 18.06.2025, 01:43:37.555: Interpreting results for user summary...
2025-06-17T23:43:38.986Z [LOG] 18.06.2025, 01:43:38.985: Interpreter summary: Added transaction for REWE Altenhöferallee/Riedbergallee, Frankfurt on June 16, 2025, for a total of 2.48 EUR.
2025-06-17T23:43:38.991Z [LOG] 18.06.2025, 01:43:38.990: [BOT] Response from API for photo for chatId 1931272012: "Added transaction for REWE Altenhöferallee/Riedbergallee, Frankfurt on June 16, 2025, for a total of 2.48 EUR."
2025-06-18T00:33:32.341Z [LOG] 18.06.2025, 02:33:32.340: [BOT] Photo received from chatId 1931272012
2025-06-18T00:33:32.385Z [LOG] 18.06.2025, 02:33:32.384: [BOT] Using command for photo: "Process this image"
2025-06-18T00:33:32.731Z [LOG] 18.06.2025, 02:33:32.730: Received command: Process this image
2025-06-18T00:33:32.731Z [ERROR] FATAL: Failed to load database schema DDL: {}
2025-06-18T00:33:32.732Z [LOG] 18.06.2025, 02:33:32.732: [IMG] File is already JPEG. Using as is: uploads/1750206812643-telegram-image-1750206812385.jpg
2025-06-18T00:33:32.732Z [LOG] 18.06.2025, 02:33:32.732: [IMG] Received file: telegram-image-1750206812385.jpg, MIME type: image/jpeg, Saved at: uploads/1750206812643-telegram-image-1750206812385.jpg
2025-06-18T00:33:32.733Z [LOG] 18.06.2025, 02:33:32.733: Sending command to OpenAI for action decision...
2025-06-18T00:33:41.767Z [LOG] 18.06.2025, 02:33:41.766: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_gjwbaZi6O1mU91DkTikFRetE",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\"action\":\"create_transaction\",\"transaction\":{\"shop\":\"REWE Altenhöferallee/Riedbergallee\",\"date\":\"2025-06-17\",\"time\":\"12:42:36\",\"total\":7.04,\"currency\":\"EUR\",\"discount\":null,\"items\":[{\"name\":\"SPIESSBR-BROETCH\",\"quantity\":1,\"price\":2.90,\"category\":\"groceries\"},{\"name\":\"HI-S BAUCH BROET\",\"quantity\":1,\"price\":2.90,\"category\":\"groceries\"},{\"name\":\"MIO MATE GINGER\",\"quantity\":1,\"price\":1.09,\"category\":\"groceries\"},{\"name\":\"PFAND 0,15 EUR\",\"quantity\":1,\"price\":0.15,\"category\":\"misc\"}]}}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-18T00:33:41.768Z [LOG] 18.06.2025, 02:33:41.767: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_gjwbaZi6O1mU91DkTikFRetE","type":"function","function":{"name":"handle_natural_command","arguments":"{\"action\":\"create_transaction\",\"transaction\":{\"shop\":\"REWE Altenhöferallee/Riedbergallee\",\"date\":\"2025-06-17\",\"time\":\"12:42:36\",\"total\":7.04,\"currency\":\"EUR\",\"discount\":null,\"items\":[{\"name\":\"SPIESSBR-BROETCH\",\"quantity\":1,\"price\":2.90,\"category\":\"groceries\"},{\"name\":\"HI-S BAUCH BROET\",\"quantity\":1,\"price\":2.90,\"category\":\"groceries\"},{\"name\":\"MIO MATE GINGER\",\"quantity\":1,\"price\":1.09,\"category\":\"groceries\"},{\"name\":\"PFAND 0,15 EUR\",\"quantity\":1,\"price\":0.15,\"category\":\"misc\"}]}}"}}],"refusal":null,"annotations":[]}
2025-06-18T00:33:41.768Z [LOG] 18.06.2025, 02:33:41.768: Parsed Args {"action":"create_transaction","transaction":{"shop":"REWE Altenhöferallee/Riedbergallee","date":"2025-06-17","time":"12:42:36","total":7.04,"currency":"EUR","discount":null,"items":[{"name":"SPIESSBR-BROETCH","quantity":1,"price":2.9,"category":"groceries"},{"name":"HI-S BAUCH BROET","quantity":1,"price":2.9,"category":"groceries"},{"name":"MIO MATE GINGER","quantity":1,"price":1.09,"category":"groceries"},{"name":"PFAND 0,15 EUR","quantity":1,"price":0.15,"category":"misc"}]}}
2025-06-18T00:33:41.769Z [LOG] 18.06.2025, 02:33:41.768: AI Decision (Validated): {
  "action": "create_transaction",
  "transaction": {
    "shop": "REWE Altenhöferallee/Riedbergallee",
    "date": "2025-06-17",
    "time": "12:42:36",
    "total": 7.04,
    "currency": "EUR",
    "discount": null,
    "items": [
      {
        "name": "SPIESSBR-BROETCH",
        "quantity": 1,
        "price": 2.9,
        "category": "groceries"
      },
      {
        "name": "HI-S BAUCH BROET",
        "quantity": 1,
        "price": 2.9,
        "category": "groceries"
      },
      {
        "name": "MIO MATE GINGER",
        "quantity": 1,
        "price": 1.09,
        "category": "groceries"
      },
      {
        "name": "PFAND 0,15 EUR",
        "quantity": 1,
        "price": 0.15,
        "category": "misc"
      }
    ]
  }
}
2025-06-18T00:33:41.769Z [LOG] 18.06.2025, 02:33:41.769: Executing step 1 with action: create_transaction
2025-06-18T00:33:41.769Z [LOG] 18.06.2025, 02:33:41.769: Executing create_transaction
2025-06-18T00:33:41.796Z [LOG] 18.06.2025, 02:33:41.796: ✅ Created transaction: REWE Altenhöferallee/Riedbergallee - 7.04 EUR (ID: 88)
2025-06-18T00:33:41.797Z [LOG] 18.06.2025, 02:33:41.796: Results before serialization: [
  {
    "success": true,
    "message": "✅ Added transaction for REWE Altenhöferallee/Riedbergallee on 2025-06-17 in EUR for total of 7.04 EUR. Synced to both databases (Original ID: undefined, Firefly ID: undefined)"
  }
]
2025-06-18T00:33:41.797Z [LOG] 18.06.2025, 02:33:41.797: Interpreting results for user summary...
2025-06-18T00:33:41.797Z [LOG] 18.06.2025, 02:33:41.797: Sanitized results for interpreter: [
  {
    "success": true,
    "message": "✅ Added transaction for REWE Altenhöferallee/Riedbergallee on 2025-06-17 in EUR for total of 7.04 EUR. Synced to both databases (Original ID: undefined, Firefly ID: undefined)",
    "error": null,
    "event": null,
    "data": null,
    "query": null,
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": null,
    "total": null,
    "result": null,
    "message_id": null
  }
]
2025-06-18T00:33:42.923Z [LOG] 18.06.2025, 02:33:42.923: Interpreter summary: Added transaction for REWE Altenhöferallee/Riedbergallee on June 17, 2025, for a total of 7.04 EUR.
2025-06-18T00:33:42.925Z [LOG] 18.06.2025, 02:33:42.925: [BOT] Response from API for photo for chatId 1931272012: "Added transaction for REWE Altenhöferallee/Riedbergallee on June 17, 2025, for a total of 7.04 EUR."
2025-06-18T00:34:36.657Z [LOG] 18.06.2025, 02:34:36.656: [BOT] Message from chatId 1931272012: "delete transaction named test simple shop"
2025-06-18T00:34:36.766Z [LOG] 18.06.2025, 02:34:36.766: [BOT] Attempting to POST to: http://100.91.174.117:3000/ai/natural
2025-06-18T00:34:36.771Z [LOG] 18.06.2025, 02:34:36.770: Received command: delete transaction named test simple shop
2025-06-18T00:34:36.771Z [ERROR] FATAL: Failed to load database schema DDL: {}
2025-06-18T00:34:36.772Z [LOG] 18.06.2025, 02:34:36.771: Sending command to OpenAI for action decision...
2025-06-18T00:34:38.060Z [LOG] 18.06.2025, 02:34:38.059: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_qOEZOVKUW8GSx9eqHR81ErSi",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\"action\":\"execute_sql_query\",\"query\":\"DELETE FROM transactions WHERE shop = 'test simple shop'\"}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-18T00:34:38.060Z [LOG] 18.06.2025, 02:34:38.060: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_qOEZOVKUW8GSx9eqHR81ErSi","type":"function","function":{"name":"handle_natural_command","arguments":"{\"action\":\"execute_sql_query\",\"query\":\"DELETE FROM transactions WHERE shop = 'test simple shop'\"}"}}],"refusal":null,"annotations":[]}
2025-06-18T00:34:38.061Z [LOG] 18.06.2025, 02:34:38.060: Parsed Args {"action":"execute_sql_query","query":"DELETE FROM transactions WHERE shop = 'test simple shop'"}
2025-06-18T00:34:38.061Z [LOG] 18.06.2025, 02:34:38.061: AI Decision (Validated): {
  "action": "execute_sql_query",
  "query": "DELETE FROM transactions WHERE shop = 'test simple shop'"
}
2025-06-18T00:34:38.061Z [LOG] 18.06.2025, 02:34:38.061: Executing step 1 with action: execute_sql_query
2025-06-18T00:34:38.062Z [LOG] 18.06.2025, 02:34:38.062: Executing execute_sql_query
2025-06-18T00:34:38.062Z [LOG] 18.06.2025, 02:34:38.062: SQL Query from AI: DELETE FROM transactions WHERE shop = 'test simple shop'
2025-06-18T00:34:38.067Z [LOG] 18.06.2025, 02:34:38.067: Results before serialization: [
  {
    "success": true,
    "data": {
      "changes": 1,
      "lastID": 0,
      "message": "DML query executed successfully."
    },
    "query": "DELETE FROM transactions WHERE shop = 'test simple shop'",
    "message": "SQL query executed."
  }
]
2025-06-18T00:34:38.067Z [LOG] 18.06.2025, 02:34:38.067: Sanitized results for interpreter: [
  {
    "success": true,
    "message": "SQL query executed.",
    "error": null,
    "event": null,
    "data": {
      "changes": 1,
      "lastID": 0,
      "message": "DML query executed successfully."
    },
    "query": "DELETE FROM transactions WHERE shop = 'test simple shop'",
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": null,
    "total": null,
    "result": null,
    "message_id": null
  }
]
2025-06-18T00:34:38.068Z [LOG] 18.06.2025, 02:34:38.067: Interpreting results for user summary...
2025-06-18T00:34:39.239Z [LOG] 18.06.2025, 02:34:39.238: Interpreter summary: Query successful. 1 row affected.
2025-06-18T00:34:39.241Z [LOG] 18.06.2025, 02:34:39.240: [BOT] Response from API for chatId 1931272012: "Query successful. 1 row affected."
2025-06-18T00:36:23.954Z [LOG] 18.06.2025, 02:36:23.954: [BOT] Photo received from chatId 1931272012
2025-06-18T00:36:24.001Z [LOG] 18.06.2025, 02:36:24.001: [BOT] Using command for photo: "Process this image"
2025-06-18T00:36:24.337Z [LOG] 18.06.2025, 02:36:24.337: Received command: Process this image
2025-06-18T00:36:24.338Z [ERROR] FATAL: Failed to load database schema DDL: {}
2025-06-18T00:36:24.338Z [LOG] 18.06.2025, 02:36:24.338: [IMG] Received file: telegram-image-1750206984002.jpg, MIME type: image/jpeg, Saved at: uploads/1750206984270-telegram-image-1750206984002.jpg
2025-06-18T00:36:24.339Z [LOG] 18.06.2025, 02:36:24.338: [IMG] File is already JPEG. Using as is: uploads/1750206984270-telegram-image-1750206984002.jpg
2025-06-18T00:36:24.340Z [LOG] 18.06.2025, 02:36:24.339: Sending command to OpenAI for action decision...
2025-06-18T00:36:31.380Z [LOG] 18.06.2025, 02:36:31.380: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_qUA13YMx6yKHqnbzm6VptIg1",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\"action\":\"create_transaction\",\"transaction\":{\"shop\":\"dm-drogerie markt, Riedbergplatz 2, Frankfurt am Main\",\"date\":\"2025-06-17\",\"time\":\"13:39:00\",\"total\":2.7,\"currency\":\"EUR\",\"discount\":null,\"items\":[{\"name\":\"Sportness 34% Protrl Peanut 40g\",\"quantity\":2,\"price\":0.85,\"category\":\"groceries\"},{\"name\":\"ebelin Nagelknipser 1St\",\"quantity\":1,\"price\":1.85,\"category\":\"cosmetics\"}]}}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-18T00:36:31.381Z [LOG] 18.06.2025, 02:36:31.381: Parsed Args {"action":"create_transaction","transaction":{"shop":"dm-drogerie markt, Riedbergplatz 2, Frankfurt am Main","date":"2025-06-17","time":"13:39:00","total":2.7,"currency":"EUR","discount":null,"items":[{"name":"Sportness 34% Protrl Peanut 40g","quantity":2,"price":0.85,"category":"groceries"},{"name":"ebelin Nagelknipser 1St","quantity":1,"price":1.85,"category":"cosmetics"}]}}
2025-06-18T00:36:31.382Z [LOG] 18.06.2025, 02:36:31.381: AI Decision (Validated): {
  "action": "create_transaction",
  "transaction": {
    "shop": "dm-drogerie markt, Riedbergplatz 2, Frankfurt am Main",
    "date": "2025-06-17",
    "time": "13:39:00",
    "total": 2.7,
    "currency": "EUR",
    "discount": null,
    "items": [
      {
        "name": "Sportness 34% Protrl Peanut 40g",
        "quantity": 2,
        "price": 0.85,
        "category": "groceries"
      },
      {
        "name": "ebelin Nagelknipser 1St",
        "quantity": 1,
        "price": 1.85,
        "category": "cosmetics"
      }
    ]
  }
}
2025-06-18T00:36:31.381Z [LOG] 18.06.2025, 02:36:31.380: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_qUA13YMx6yKHqnbzm6VptIg1","type":"function","function":{"name":"handle_natural_command","arguments":"{\"action\":\"create_transaction\",\"transaction\":{\"shop\":\"dm-drogerie markt, Riedbergplatz 2, Frankfurt am Main\",\"date\":\"2025-06-17\",\"time\":\"13:39:00\",\"total\":2.7,\"currency\":\"EUR\",\"discount\":null,\"items\":[{\"name\":\"Sportness 34% Protrl Peanut 40g\",\"quantity\":2,\"price\":0.85,\"category\":\"groceries\"},{\"name\":\"ebelin Nagelknipser 1St\",\"quantity\":1,\"price\":1.85,\"category\":\"cosmetics\"}]}}"}}],"refusal":null,"annotations":[]}
2025-06-18T00:36:31.382Z [LOG] 18.06.2025, 02:36:31.382: Executing step 1 with action: create_transaction
2025-06-18T00:36:31.382Z [LOG] 18.06.2025, 02:36:31.382: Executing create_transaction
2025-06-18T00:36:31.390Z [LOG] 18.06.2025, 02:36:31.390: ✅ Created transaction: dm-drogerie markt, Riedbergplatz 2, Frankfurt am Main - 2.7 EUR (ID: 89)
2025-06-18T00:36:31.390Z [LOG] 18.06.2025, 02:36:31.390: Results before serialization: [
  {
    "success": true,
    "message": "✅ Added transaction for dm-drogerie markt, Riedbergplatz 2, Frankfurt am Main on 2025-06-17 in EUR for total of 2.7 EUR. Synced to both databases (Original ID: undefined, Firefly ID: undefined)"
  }
]
2025-06-18T00:36:31.391Z [LOG] 18.06.2025, 02:36:31.390: Sanitized results for interpreter: [
  {
    "success": true,
    "message": "✅ Added transaction for dm-drogerie markt, Riedbergplatz 2, Frankfurt am Main on 2025-06-17 in EUR for total of 2.7 EUR. Synced to both databases (Original ID: undefined, Firefly ID: undefined)",
    "error": null,
    "event": null,
    "data": null,
    "query": null,
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": null,
    "total": null,
    "result": null,
    "message_id": null
  }
]
2025-06-18T00:36:31.391Z [LOG] 18.06.2025, 02:36:31.391: Interpreting results for user summary...
2025-06-18T00:36:32.924Z [LOG] 18.06.2025, 02:36:32.923: Interpreter summary: Added transaction for dm-drogerie markt, Riedbergplatz 2, Frankfurt am Main on June 17, 2025, for a total of €2.70.
2025-06-18T00:36:32.926Z [LOG] 18.06.2025, 02:36:32.926: [BOT] Response from API for photo for chatId 1931272012: "Added transaction for dm-drogerie markt, Riedbergplatz 2, Frankfurt am Main on June 17, 2025, for a total of €2.70."
2025-06-18T00:44:04.006Z [LOG] 18.06.2025, 02:44:04.006: [BOT] Message from chatId 1931272012: "how many accounts do i have"
2025-06-18T00:44:04.066Z [LOG] 18.06.2025, 02:44:04.065: [BOT] Attempting to POST to: http://100.91.174.117:3000/ai/natural
2025-06-18T00:44:04.070Z [LOG] 18.06.2025, 02:44:04.069: Received command: how many accounts do i have
2025-06-18T00:44:04.070Z [ERROR] FATAL: Failed to load database schema DDL: {}
2025-06-18T00:44:04.070Z [LOG] 18.06.2025, 02:44:04.070: Sending command to OpenAI for action decision...
2025-06-18T00:44:05.237Z [LOG] 18.06.2025, 02:44:05.237: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_G26ourATYSFSmfCok4XIeIkz",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\"action\":\"execute_sql_query\",\"query\":\"SELECT COUNT(*) FROM accounts;\"}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-18T00:44:05.238Z [LOG] 18.06.2025, 02:44:05.237: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_G26ourATYSFSmfCok4XIeIkz","type":"function","function":{"name":"handle_natural_command","arguments":"{\"action\":\"execute_sql_query\",\"query\":\"SELECT COUNT(*) FROM accounts;\"}"}}],"refusal":null,"annotations":[]}
2025-06-18T00:44:05.238Z [LOG] 18.06.2025, 02:44:05.238: Parsed Args {"action":"execute_sql_query","query":"SELECT COUNT(*) FROM accounts;"}
2025-06-18T00:44:05.238Z [LOG] 18.06.2025, 02:44:05.238: AI Decision (Validated): {
  "action": "execute_sql_query",
  "query": "SELECT COUNT(*) FROM accounts;"
}
2025-06-18T00:44:05.238Z [LOG] 18.06.2025, 02:44:05.238: Executing step 1 with action: execute_sql_query
2025-06-18T00:44:05.239Z [LOG] 18.06.2025, 02:44:05.239: Executing execute_sql_query
2025-06-18T00:44:05.239Z [LOG] 18.06.2025, 02:44:05.239: SQL Query from AI: SELECT COUNT(*) FROM accounts;
2025-06-18T00:44:05.241Z [LOG] 18.06.2025, 02:44:05.241: Results before serialization: [
  {
    "success": true,
    "data": [
      {
        "COUNT(*)": 1
      }
    ],
    "query": "SELECT COUNT(*) FROM accounts;",
    "message": "SQL query executed."
  }
]
2025-06-18T00:44:05.241Z [LOG] 18.06.2025, 02:44:05.241: Sanitized results for interpreter: [
  {
    "success": true,
    "message": "SQL query executed.",
    "error": null,
    "event": null,
    "data": [
      {
        "COUNT(*)": 1
      }
    ],
    "query": "SELECT COUNT(*) FROM accounts;",
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": null,
    "total": null,
    "result": null,
    "message_id": null
  }
]
2025-06-18T00:44:05.242Z [LOG] 18.06.2025, 02:44:05.241: Interpreting results for user summary...
2025-06-18T00:44:05.894Z [LOG] 18.06.2025, 02:44:05.894: Interpreter summary: Query successful. There is 1 account in your database.
2025-06-18T00:44:05.896Z [LOG] 18.06.2025, 02:44:05.896: [BOT] Response from API for chatId 1931272012: "Query successful. There is 1 account in your database."
2025-06-18T00:45:08.342Z [LOG] 18.06.2025, 02:45:08.341: [BOT] Message from chatId 1931272012: "create a new savings account"
2025-06-18T00:45:08.392Z [LOG] 18.06.2025, 02:45:08.392: [BOT] Attempting to POST to: http://100.91.174.117:3000/ai/natural
2025-06-18T00:45:08.396Z [LOG] 18.06.2025, 02:45:08.395: Received command: create a new savings account
2025-06-18T00:45:08.396Z [ERROR] FATAL: Failed to load database schema DDL: {}
2025-06-18T00:45:08.396Z [LOG] 18.06.2025, 02:45:08.396: Sending command to OpenAI for action decision...
2025-06-18T00:45:09.330Z [LOG] 18.06.2025, 02:45:09.330: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_oRMj6OKDN2lLW0m1eKrISmGY",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\"action\":\"add_account\",\"account\":{\"name\":\"Savings Account\",\"description\":\"Personal savings account\",\"type\":\"savings\",\"balance\":0}}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-18T00:45:09.331Z [LOG] 18.06.2025, 02:45:09.330: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_oRMj6OKDN2lLW0m1eKrISmGY","type":"function","function":{"name":"handle_natural_command","arguments":"{\"action\":\"add_account\",\"account\":{\"name\":\"Savings Account\",\"description\":\"Personal savings account\",\"type\":\"savings\",\"balance\":0}}"}}],"refusal":null,"annotations":[]}
2025-06-18T00:45:09.332Z [LOG] 18.06.2025, 02:45:09.331: Executing step 1 with action: add_account
2025-06-18T00:45:09.332Z [LOG] 18.06.2025, 02:45:09.332: Executing add_account
2025-06-18T00:45:09.331Z [LOG] 18.06.2025, 02:45:09.331: Parsed Args {"action":"add_account","account":{"name":"Savings Account","description":"Personal savings account","type":"savings","balance":0}}
2025-06-18T00:45:09.331Z [LOG] 18.06.2025, 02:45:09.331: AI Decision (Validated): {
  "action": "add_account",
  "account": {
    "name": "Savings Account",
    "description": "Personal savings account",
    "type": "savings",
    "balance": 0
  }
}
2025-06-18T00:45:09.376Z [LOG] 18.06.2025, 02:45:09.376: ✅ Created account: 2 (ID: 3)
2025-06-18T00:45:09.376Z [LOG] 18.06.2025, 02:45:09.376: Results before serialization: [
  {
    "success": true,
    "message": "Added account Savings Account"
  },
  {
    "success": true,
    "message": "Synced account to Firefly with ID [object Object]"
  }
]
2025-06-18T00:45:09.377Z [LOG] 18.06.2025, 02:45:09.377: Sanitized results for interpreter: [
  {
    "success": true,
    "message": "Added account Savings Account",
    "error": null,
    "event": null,
    "data": null,
    "query": null,
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": null,
    "total": null,
    "result": null,
    "message_id": null
  },
  {
    "success": true,
    "message": "Synced account to Firefly with ID [object Object]",
    "error": null,
    "event": null,
    "data": null,
    "query": null,
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": null,
    "total": null,
    "result": null,
    "message_id": null
  }
]
2025-06-18T00:45:09.377Z [LOG] 18.06.2025, 02:45:09.377: Interpreting results for user summary...
2025-06-18T00:45:10.304Z [LOG] 18.06.2025, 02:45:10.303: Interpreter summary: I’ve added your Savings Account and synced it to Firefly successfully.
2025-06-18T00:45:10.306Z [LOG] 18.06.2025, 02:45:10.305: [BOT] Response from API for chatId 1931272012: "I’ve added your Savings Account and synced it to Firefly successfully."
2025-06-18T00:50:21.681Z [LOG] 18.06.2025, 02:50:21.680: [BOT] Received unhandled message type from chatId 1931272012: {"message_id":806,"from":{"id":1931272012,"is_bot":false,"first_name":"baji","language_code":"de"},"chat":{"id":1931272012,"first_name":"baji","type":"private"},"date":1750207821,"document":{"file_name":"Receipt-2678-8340-5877.pdf","mime_type":"application/pdf","thumbnail":{"file_id":"AAMCBAADGQEAAgMmaFINTYS1C0PreyAov_13SJXjWg4AAvsgAAIyVZFSRajRRPTjX_IBAAdtAAM2BA","file_unique_id":"AQAD-yAAAjJVkVJy","file_size":12721,"width":320,"height":320},"thumb":{"file_id":"AAMCBAADGQEAAgMmaFINTYS1C0PreyAov_13SJXjWg4AAvsgAAIyVZFSRajRRPTjX_IBAAdtAAM2BA","file_unique_id":"AQAD-yAAAjJVkVJy","file_size":12721,"width":320,"height":320},"file_id":"BQACAgQAAxkBAAIDJmhSDU2EtQtD63sgKL_9d0iV41oOAAL7IAACMlWRUkWo0UT041_yNgQ","file_unique_id":"AgAD-yAAAjJVkVI","file_size":32756}}
2025-06-18T00:54:22.374Z [LOG] 18.06.2025, 02:54:22.373: [SRV] Telegram logging bot initialized for admin chat.
2025-06-18T00:54:22.383Z [LOG] 18.06.2025, 02:54:22.382: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-18T00:54:22.382Z [LOG] 18.06.2025, 02:54:22.382: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-18T00:55:32.784Z [LOG] 18.06.2025, 02:55:32.784: [SRV] Telegram logging bot initialized for admin chat.
2025-06-18T00:55:32.792Z [LOG] 18.06.2025, 02:55:32.792: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-18T00:55:32.792Z [LOG] 18.06.2025, 02:55:32.792: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-18T00:56:47.814Z [LOG] 18.06.2025, 02:56:47.813: [SRV] Telegram logging bot initialized for admin chat.
2025-06-18T00:56:47.821Z [LOG] 18.06.2025, 02:56:47.821: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-18T00:56:47.822Z [LOG] 18.06.2025, 02:56:47.821: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-18T00:58:12.714Z [LOG] 18.06.2025, 02:58:12.714: [BOT] PDF document received from chatId 1931272012
2025-06-18T00:58:12.756Z [LOG] 18.06.2025, 02:58:12.756: [BOT] Using command for PDF: "Process this PDF receipt"
2025-06-18T00:58:13.087Z [LOG] 18.06.2025, 02:58:13.086: Received command: Process this PDF receipt
2025-06-18T00:58:13.089Z [ERROR] FATAL: Failed to load database schema DDL: {}
2025-06-18T00:58:13.089Z [LOG] 18.06.2025, 02:58:13.089: [IMG] Received file: Receipt-2678-8340-5877.pdf, MIME type: application/pdf, Saved at: uploads/1750208293076-Receipt-2678-8340-5877.pdf
2025-06-18T00:58:13.090Z [LOG] 18.06.2025, 02:58:13.089: [PDF] Processing PDF receipt: Receipt-2678-8340-5877.pdf
2025-06-18T00:58:13.243Z [LOG] 18.06.2025, 02:58:13.243: [PDF] PDF parsing failed or no transactions found, treating as regular document
2025-06-18T00:58:13.243Z [LOG] 18.06.2025, 02:58:13.243: Sending command to OpenAI for action decision...
2025-06-18T00:58:16.108Z [LOG] 18.06.2025, 02:58:16.108: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_W0EFLhVCtidDHQSz83404T7t",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\"action\":\"respond\",\"message\":\"I will extract and analyze the details from the uploaded PDF receipt. Please wait while I process it and retrieve information such as shop name, date, total amount, currency, and itemized list. If you have a preferred account to link this transaction to, please specify it, or I will proceed with default settings.\"}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-18T00:58:16.109Z [LOG] 18.06.2025, 02:58:16.109: Parsed Args {"action":"respond","message":"I will extract and analyze the details from the uploaded PDF receipt. Please wait while I process it and retrieve information such as shop name, date, total amount, currency, and itemized list. If you have a preferred account to link this transaction to, please specify it, or I will proceed with default settings."}
2025-06-18T00:58:16.109Z [LOG] 18.06.2025, 02:58:16.108: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_W0EFLhVCtidDHQSz83404T7t","type":"function","function":{"name":"handle_natural_command","arguments":"{\"action\":\"respond\",\"message\":\"I will extract and analyze the details from the uploaded PDF receipt. Please wait while I process it and retrieve information such as shop name, date, total amount, currency, and itemized list. If you have a preferred account to link this transaction to, please specify it, or I will proceed with default settings.\"}"}}],"refusal":null,"annotations":[]}
2025-06-18T00:58:16.110Z [LOG] 18.06.2025, 02:58:16.110: Executing step 1 with action: respond
2025-06-18T00:58:16.110Z [LOG] 18.06.2025, 02:58:16.109: AI Decision (Validated): {
  "action": "respond",
  "message": "I will extract and analyze the details from the uploaded PDF receipt. Please wait while I process it and retrieve information such as shop name, date, total amount, currency, and itemized list. If you have a preferred account to link this transaction to, please specify it, or I will proceed with default settings."
}
2025-06-18T00:58:16.110Z [LOG] 18.06.2025, 02:58:16.110: Executing respond
2025-06-18T00:58:16.110Z [LOG] 18.06.2025, 02:58:16.110: Direct response: I will extract and analyze the details from the uploaded PDF receipt. Please wait while I process it and retrieve information such as shop name, date, total amount, currency, and itemized list. If you have a preferred account to link this transaction to, please specify it, or I will proceed with default settings.
2025-06-18T00:58:16.115Z [LOG] 18.06.2025, 02:58:16.115: [BOT] Response from API for PDF for chatId 1931272012: "I will extract and analyze the details from the uploaded PDF receipt. Please wait while I process it and retrieve information such as shop name, date, total amount, currency, and itemized list. If you have a preferred account to link this transaction to, please specify it, or I will proceed with default settings."
2025-06-18T01:18:03.634Z [LOG] 18.06.2025, 03:18:03.633: [SRV] Telegram logging bot initialized for admin chat.
2025-06-18T01:18:03.642Z [LOG] 18.06.2025, 03:18:03.641: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-18T01:18:03.642Z [LOG] 18.06.2025, 03:18:03.642: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-18T01:18:33.633Z [LOG] 18.06.2025, 03:18:33.633: [SRV] Telegram logging bot initialized for admin chat.
2025-06-18T01:18:33.641Z [LOG] 18.06.2025, 03:18:33.641: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-18T01:18:33.641Z [LOG] 18.06.2025, 03:18:33.641: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-18T01:20:05.658Z [LOG] 18.06.2025, 03:20:05.658: [SRV] Telegram logging bot initialized for admin chat.
2025-06-18T01:20:05.666Z [LOG] 18.06.2025, 03:20:05.666: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-18T01:20:05.667Z [LOG] 18.06.2025, 03:20:05.666: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-18T01:20:27.075Z [LOG] 18.06.2025, 03:20:27.074: [BOT] PDF document received from chatId 1931272012
2025-06-18T01:20:27.125Z [LOG] 18.06.2025, 03:20:27.125: [BOT] Using command for PDF: "Process this PDF receipt"
2025-06-18T01:20:30.033Z [LOG] 18.06.2025, 03:20:30.032: Received command: Process this PDF receipt
2025-06-18T01:20:30.109Z [LOG] 18.06.2025, 03:20:30.109: Database schema DDL loaded successfully.
2025-06-18T01:20:30.110Z [LOG] 18.06.2025, 03:20:30.109: [IMG] Received file: Receipt-2678-8340-5877.pdf, MIME type: application/pdf, Saved at: uploads/1750209627307-Receipt-2678-8340-5877.pdf
2025-06-18T01:20:30.110Z [LOG] 18.06.2025, 03:20:30.110: [PDF] Processing PDF receipt: Receipt-2678-8340-5877.pdf
2025-06-18T01:20:30.258Z [LOG] 18.06.2025, 03:20:30.257: [PDF] PDF parsing failed or no transactions found, treating as regular document
2025-06-18T01:20:30.258Z [LOG] 18.06.2025, 03:20:30.258: Sending command to OpenAI for action decision...
2025-06-18T01:20:34.814Z [LOG] 18.06.2025, 03:20:34.813: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_Nxlin2XJ5v65uTswL2g3DwQT",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\"action\":\"create_transaction\",\"transaction\":{\"shop\":\"Unknown\",\"date\":\"2025-06-18\",\"total\":0,\"currency\":\"CHF\",\"discount\":null,\"items\":[]}}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-18T01:20:34.815Z [LOG] 18.06.2025, 03:20:34.814: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_Nxlin2XJ5v65uTswL2g3DwQT","type":"function","function":{"name":"handle_natural_command","arguments":"{\"action\":\"create_transaction\",\"transaction\":{\"shop\":\"Unknown\",\"date\":\"2025-06-18\",\"total\":0,\"currency\":\"CHF\",\"discount\":null,\"items\":[]}}"}}],"refusal":null,"annotations":[]}
2025-06-18T01:20:34.815Z [LOG] 18.06.2025, 03:20:34.815: Parsed Args {"action":"create_transaction","transaction":{"shop":"Unknown","date":"2025-06-18","total":0,"currency":"CHF","discount":null,"items":[]}}
2025-06-18T01:20:34.815Z [LOG] 18.06.2025, 03:20:34.815: AI Decision (Validated): {
  "action": "create_transaction",
  "transaction": {
    "shop": "Unknown",
    "date": "2025-06-18",
    "total": 0,
    "currency": "CHF",
    "discount": null,
    "items": []
  }
}
2025-06-18T01:20:34.816Z [LOG] 18.06.2025, 03:20:34.815: Executing step 1 with action: create_transaction
2025-06-18T01:20:34.816Z [LOG] 18.06.2025, 03:20:34.816: Executing create_transaction
2025-06-18T01:20:34.854Z [LOG] 18.06.2025, 03:20:34.853: ✅ Created transaction: Unknown - 0 CHF (ID: 90)
2025-06-18T01:20:34.854Z [LOG] 18.06.2025, 03:20:34.854: Results before serialization: [
  {
    "success": true,
    "message": "✅ Added transaction for Unknown on 2025-06-18 in CHF for total of 0 CHF. Synced to both databases (Original ID: undefined, Firefly ID: undefined)"
  }
]
2025-06-18T01:20:34.855Z [LOG] 18.06.2025, 03:20:34.854: Sanitized results for interpreter: [
  {
    "success": true,
    "message": "✅ Added transaction for Unknown on 2025-06-18 in CHF for total of 0 CHF. Synced to both databases (Original ID: undefined, Firefly ID: undefined)",
    "error": null,
    "event": null,
    "data": null,
    "query": null,
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": null,
    "total": null,
    "result": null,
    "message_id": null
  }
]
2025-06-18T01:20:34.855Z [LOG] 18.06.2025, 03:20:34.855: Interpreting results for user summary...
2025-06-18T01:20:35.785Z [LOG] 18.06.2025, 03:20:35.784: Interpreter summary: Added transaction for Unknown on June 18, 2025, for a total of CHF 0. The transaction has been synced to both databases.
2025-06-18T01:20:35.793Z [LOG] 18.06.2025, 03:20:35.792: [BOT] Response from API for PDF for chatId 1931272012: "Added transaction for Unknown on June 18, 2025, for a total of CHF 0. The transaction has been synced to both databases."
2025-06-18T01:22:41.476Z [LOG] 18.06.2025, 03:22:41.476: [SRV] Telegram logging bot initialized for admin chat.
2025-06-18T01:22:41.484Z [LOG] 18.06.2025, 03:22:41.484: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-18T01:22:41.484Z [LOG] 18.06.2025, 03:22:41.484: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-18T01:23:25.086Z [LOG] 18.06.2025, 03:23:25.085: [SRV] Telegram logging bot initialized for admin chat.
2025-06-18T01:23:25.094Z [LOG] 18.06.2025, 03:23:25.094: Server running on http://100.91.174.117:3000 (bound to 0.0.0.0:3000)
2025-06-18T01:23:25.094Z [LOG] 18.06.2025, 03:23:25.094: Open http://localhost:3000 or http://127.0.0.1:3000 in your browser if running locally.
2025-06-18T01:24:31.826Z [LOG] 18.06.2025, 03:24:31.826: [BOT] PDF document received from chatId 1931272012
2025-06-18T01:24:31.924Z [LOG] 18.06.2025, 03:24:31.924: [BOT] Using command for PDF: "Process this PDF receipt"
2025-06-18T01:24:32.196Z [LOG] 18.06.2025, 03:24:32.195: Received command: Process this PDF receipt
2025-06-18T01:24:32.224Z [LOG] 18.06.2025, 03:24:32.223: Database schema DDL loaded successfully.
2025-06-18T01:24:32.225Z [LOG] 18.06.2025, 03:24:32.225: [PDF] Processing PDF receipt: Receipt-2678-8340-5877.pdf
2025-06-18T01:24:32.224Z [LOG] 18.06.2025, 03:24:32.224: [IMG] Received file: Receipt-2678-8340-5877.pdf, MIME type: application/pdf, Saved at: uploads/1750209872186-Receipt-2678-8340-5877.pdf
2025-06-18T01:24:32.386Z [LOG] 18.06.2025, 03:24:32.385: [PDF] Successfully extracted text from PDF (674 chars)
2025-06-18T01:24:32.386Z [LOG] 18.06.2025, 03:24:32.386: Sending command to OpenAI for action decision...
2025-06-18T01:24:40.713Z [LOG] 18.06.2025, 03:24:40.713: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_01x2RSTY2UN6oyMRwpsBIb3f",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\"action\":\"create_transaction\",\"transaction\":{\"shop\":\"Anthropic, PBC\",\"date\":\"2025-06-16\",\"total\":10,\"currency\":\"USD\",\"discount\":null,\"items\":[{\"name\":\"One-time credit purchase\",\"quantity\":1,\"price\":10,\"category\":\"misc\"}]}}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-18T01:24:40.714Z [LOG] 18.06.2025, 03:24:40.713: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_01x2RSTY2UN6oyMRwpsBIb3f","type":"function","function":{"name":"handle_natural_command","arguments":"{\"action\":\"create_transaction\",\"transaction\":{\"shop\":\"Anthropic, PBC\",\"date\":\"2025-06-16\",\"total\":10,\"currency\":\"USD\",\"discount\":null,\"items\":[{\"name\":\"One-time credit purchase\",\"quantity\":1,\"price\":10,\"category\":\"misc\"}]}}"}}],"refusal":null,"annotations":[]}
2025-06-18T01:24:40.714Z [LOG] 18.06.2025, 03:24:40.714: Parsed Args {"action":"create_transaction","transaction":{"shop":"Anthropic, PBC","date":"2025-06-16","total":10,"currency":"USD","discount":null,"items":[{"name":"One-time credit purchase","quantity":1,"price":10,"category":"misc"}]}}
2025-06-18T01:24:40.715Z [LOG] 18.06.2025, 03:24:40.714: AI Decision (Validated): {
  "action": "create_transaction",
  "transaction": {
    "shop": "Anthropic, PBC",
    "date": "2025-06-16",
    "total": 10,
    "currency": "USD",
    "discount": null,
    "items": [
      {
        "name": "One-time credit purchase",
        "quantity": 1,
        "price": 10,
        "category": "misc"
      }
    ]
  }
}
2025-06-18T01:24:40.715Z [LOG] 18.06.2025, 03:24:40.715: Executing step 1 with action: create_transaction
2025-06-18T01:24:40.715Z [LOG] 18.06.2025, 03:24:40.715: Executing create_transaction
2025-06-18T01:24:40.724Z [LOG] 18.06.2025, 03:24:40.724: ✅ Created transaction: Anthropic, PBC - 10 USD (ID: 91)
2025-06-18T01:24:40.725Z [LOG] 18.06.2025, 03:24:40.725: Results before serialization: [
  {
    "success": true,
    "message": "✅ Added transaction for Anthropic, PBC on 2025-06-16 in USD for total of 10 USD. Synced to both databases (Original ID: undefined, Firefly ID: undefined)"
  }
]
2025-06-18T01:24:40.725Z [LOG] 18.06.2025, 03:24:40.725: Sanitized results for interpreter: [
  {
    "success": true,
    "message": "✅ Added transaction for Anthropic, PBC on 2025-06-16 in USD for total of 10 USD. Synced to both databases (Original ID: undefined, Firefly ID: undefined)",
    "error": null,
    "event": null,
    "data": null,
    "query": null,
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": null,
    "total": null,
    "result": null,
    "message_id": null
  }
]
2025-06-18T01:24:40.725Z [LOG] 18.06.2025, 03:24:40.725: Interpreting results for user summary...
2025-06-18T01:24:42.357Z [LOG] 18.06.2025, 03:24:42.357: Interpreter summary: Added transaction for Anthropic, PBC on June 16, 2025, for $10 USD. This transaction has been synced to both databases.
2025-06-18T01:24:42.361Z [LOG] 18.06.2025, 03:24:42.361: [BOT] Response from API for PDF for chatId 1931272012: "Added transaction for Anthropic, PBC on June 16, 2025, for $10 USD. This transaction has been synced to both databases."
2025-06-18T01:26:20.821Z [LOG] 18.06.2025, 03:26:20.820: [BOT] Message from chatId 1931272012: "summarize my latest mail"
2025-06-18T01:26:20.921Z [LOG] 18.06.2025, 03:26:20.921: [BOT] Attempting to POST to: http://100.91.174.117:3000/ai/natural
2025-06-18T01:26:20.930Z [LOG] 18.06.2025, 03:26:20.929: Received command: summarize my latest mail
2025-06-18T01:26:20.930Z [LOG] 18.06.2025, 03:26:20.930: Sending command to OpenAI for action decision...
2025-06-18T01:26:22.897Z [LOG] 18.06.2025, 03:26:22.896: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_gcSyf0X3ROJlqR1ex0c1KH5e",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\"action\":\"list_messages\",\"query\":\"\",\"max_results\":1}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-18T01:26:22.899Z [LOG] 18.06.2025, 03:26:22.897: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_gcSyf0X3ROJlqR1ex0c1KH5e","type":"function","function":{"name":"handle_natural_command","arguments":"{\"action\":\"list_messages\",\"query\":\"\",\"max_results\":1}"}}],"refusal":null,"annotations":[]}
2025-06-18T01:26:22.900Z [LOG] 18.06.2025, 03:26:22.899: Parsed Args {"action":"list_messages","query":"","max_results":1}
2025-06-18T01:26:22.900Z [LOG] 18.06.2025, 03:26:22.900: AI Decision (Validated): {
  "action": "list_messages",
  "query": "",
  "max_results": 1
}
2025-06-18T01:26:22.901Z [LOG] 18.06.2025, 03:26:22.900: Executing step 1 with action: list_messages
2025-06-18T01:26:22.901Z [LOG] 18.06.2025, 03:26:22.901: Executing list_messages
2025-06-18T01:26:22.905Z [LOG] 18.06.2025, 03:26:22.904: No token found, initiating OAuth flow
2025-06-18T01:26:22.906Z [LOG] 18.06.2025, 03:26:22.905: Authorize this app by visiting this URL: https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcalendar%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdocuments%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fgmail.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fgmail.send&prompt=consent&response_type=code&client_id=895445737787-792bqt3njnqhtvrdh9t0bld77v563kac.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Foauth2callback
2025-06-18T01:26:50.930Z [ERROR] [BOT-ERR] Error processing text message for chatId 1931272012: timeout of 30000ms exceeded
2025-06-18T01:30:10.231Z [LOG] 18.06.2025, 03:30:10.230: [BOT] Message from chatId 1931272012: "summarize my latest mail"
2025-06-18T01:30:10.274Z [LOG] 18.06.2025, 03:30:10.273: [BOT] Attempting to POST to: http://100.91.174.117:3000/ai/natural
2025-06-18T01:30:10.281Z [LOG] 18.06.2025, 03:30:10.280: Received command: summarize my latest mail
2025-06-18T01:30:10.281Z [LOG] 18.06.2025, 03:30:10.281: Sending command to OpenAI for action decision...
2025-06-18T01:30:12.161Z [LOG] 18.06.2025, 03:30:12.161: 1. OpenAI Action Response: {
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_gtVmrNETPiqa3IcgSFiTEawj",
      "type": "function",
      "function": {
        "name": "handle_natural_command",
        "arguments": "{\"action\":\"list_messages\",\"query\":\"\",\"max_results\":1}"
      }
    }
  ],
  "refusal": null,
  "annotations": []
}
2025-06-18T01:30:12.162Z [LOG] 18.06.2025, 03:30:12.161: 1.a OpenAI Action Response Object {"role":"assistant","content":null,"tool_calls":[{"id":"call_gtVmrNETPiqa3IcgSFiTEawj","type":"function","function":{"name":"handle_natural_command","arguments":"{\"action\":\"list_messages\",\"query\":\"\",\"max_results\":1}"}}],"refusal":null,"annotations":[]}
2025-06-18T01:30:12.163Z [LOG] 18.06.2025, 03:30:12.162: Parsed Args {"action":"list_messages","query":"","max_results":1}
2025-06-18T01:30:12.163Z [LOG] 18.06.2025, 03:30:12.163: AI Decision (Validated): {
  "action": "list_messages",
  "query": "",
  "max_results": 1
}
2025-06-18T01:30:12.164Z [LOG] 18.06.2025, 03:30:12.163: Executing step 1 with action: list_messages
2025-06-18T01:30:12.164Z [LOG] 18.06.2025, 03:30:12.164: Executing list_messages
2025-06-18T01:30:12.166Z [LOG] 18.06.2025, 03:30:12.165: Using existing token from /home/bayarbileg/jarvis/token.json
2025-06-18T01:30:12.166Z [LOG] 18.06.2025, 03:30:12.166: Token expired or close to expiry, refreshing...
2025-06-18T01:30:12.327Z [LOG] 18.06.2025, 03:30:12.327: Token refreshed successfully
2025-06-18T01:30:12.366Z [LOG] 18.06.2025, 03:30:12.365: Token updated and stored to /home/bayarbileg/jarvis/token.json
2025-06-18T01:30:12.530Z [LOG] 18.06.2025, 03:30:12.530: Auto-continuing with get_message for ID: 19780169ac71ad46
2025-06-18T01:30:12.531Z [LOG] 18.06.2025, 03:30:12.530: Executing step 2 with action: get_message
2025-06-18T01:30:12.531Z [LOG] 18.06.2025, 03:30:12.531: Executing get_message
2025-06-18T01:30:12.532Z [LOG] 18.06.2025, 03:30:12.532: Using existing token from /home/bayarbileg/jarvis/token.json
2025-06-18T01:30:12.666Z [LOG] 18.06.2025, 03:30:12.662: Results before serialization: [
  {
    "success": true,
    "messages": [
      {
        "id": "19780169ac71ad46",
        "threadId": "19780169ac71ad46"
      }
    ],
    "total": 1
  },
  {
    "success": true,
    "message": {
      "id": "19780169ac71ad46",
      "threadId": "19780169ac71ad46",
      "labelIds": [
        "CATEGORY_PROMOTIONS",
        "INBOX"
      ],
      "snippet": "Use Postman Collections, GitHub sync, and VS Code to build and ship APIs more efficiently.‌ ‌ ‌ Hey there, At our recent user conference, POST/CON 25, we unveiled new tools to streamline how you design",
      "payload": {
        "partId": "",
        "mimeType": "text/html",
        "filename": "",
        "headers": [
          {
            "name": "Delivered-To",
            "value": "bbayarbileg@gmail.com"
          },
          {
            "name": "Received",
            "value": "by 2002:a05:7412:820e:b0:15e:7a46:624 with SMTP id v14csp2844236rdf;        Tue, 17 Jun 2025 15:50:54 -0700 (PDT)"
          },
          {
            "name": "X-Google-Smtp-Source",
            "value": "AGHT+IFM+1FlY+r8mHbhawD15LIxF5AiyekCCTUsV+SsEE7wNOfZN2MsMSruTqdIZuvhr68RUcUw"
          },
          {
            "name": "X-Received",
            "value": "by 2002:a05:620a:45a4:b0:7d0:9be0:2e35 with SMTP id af79cd13be357-7d3c6c0d381mr2231714985a.10.1750200654605;        Tue, 17 Jun 2025 15:50:54 -0700 (PDT)"
          },
          {
            "name": "ARC-Seal",
            "value": "i=1; a=rsa-sha256; t=1750200654; cv=none;        d=google.com; s=arc-20240605;        b=c42MK4RVpuInpbAf7EppgLHch1MwkbF5XSbhADK2pIK1Sz7fu/7svyVSS5dMOxArmR         TGH35bCIBDKwwMh0C5NSLMtUX/sN/shJKep+LR2MJB5JiHChoRwGHEGXgXY1fV6cBIzK         y3G8+HyDoJ5yeefZzT5B4T1YD2ZL1giAOpGpndWfTA0QO/q6HqLm3LDo7snM9F9wZw4i         cNQjsWTi/L7iyX4wt8psHV182e7MCJReu0QaH9yrqsS5a9pvWMGQADMD9IuYFa3NvqBF         ELwMNeeeh2RkDFUtqbRw5zotsdDWyucSthlM4KHvFxg1sJ1qsoHIDIF3FGZfcBxFDbTo         0Fkg=="
          },
          {
            "name": "ARC-Message-Signature",
            "value": "i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20240605;        h=to:list-unsubscribe-post:list-unsubscribe:reply-to:subject         :message-id:mime-version:from:date:content-transfer-encoding         :dkim-signature:dkim-signature;        bh=zRDA4kJ4pe+GVq1LoDnkOXPMvc6s5HyibOgHEghVg+Q=;        fh=5n8dPPTZN0hKIU1FKUWXFE0nNB5SmvVwV53c5m/RTVI=;        b=lCIiCdbOqW+lZ477YvIaeayH05WqSLOwq8J1cDrFvOrt4Kxu5pGuMOjIAsIL0k1zDY         HrFYpUEKCYfqH+INLcTqdfA72Qfz38NHYEzDLPVas4lNrc5FFEhZunJJs8SQiOGIeFnm         bRpEuHceCZIWadYmPFlF1cJ6K7l3TVGK0dP6NVV8+N6HOcrKqIrKQIT4K6hZ5As/YNhi         ranYnJulfpJBDXCsh0h0DmEJCAxpIw3Xa28mzD5Z6C2Hyhy8yzvtTWZ6ZVcUn9fwLCmv         k2zcj8HbOU+Gozg4kH2T9PixDvqEQM0/ugvYBrTCeiwrqhuuXFXFg4dH73RPttU45roY         B46Q==;        dara=google.com"
          },
          {
            "name": "ARC-Authentication-Results",
            "value": "i=1; mx.google.com;       dkim=pass header.i=@email.postman.com header.s=ifn header.b=kgEagqoD;       dkim=pass header.i=@sendgrid.info header.s=smtpapi header.b=sHZILhkM;       spf=pass (google.com: domain of bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com designates 198.37.152.180 as permitted sender) smtp.mailfrom=\"bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com\";       dmarc=pass (p=QUARANTINE sp=QUARANTINE dis=NONE) header.from=email.postman.com"
          },
          {
            "name": "Return-Path",
            "value": "<bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com>"
          },
          {
            "name": "Received",
            "value": "from o1.ptr3333.inflection.io (o1.ptr3333.inflection.io. [198.37.152.180])        by mx.google.com with ESMTPS id af79cd13be357-7d3b8edb197si1286729985a.376.2025.06.17.15.50.53        for <bbayarbileg@gmail.com>        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);        Tue, 17 Jun 2025 15:50:54 -0700 (PDT)"
          },
          {
            "name": "Received-SPF",
            "value": "pass (google.com: domain of bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com designates 198.37.152.180 as permitted sender) client-ip=198.37.152.180;"
          },
          {
            "name": "Authentication-Results",
            "value": "mx.google.com;       dkim=pass header.i=@email.postman.com header.s=ifn header.b=kgEagqoD;       dkim=pass header.i=@sendgrid.info header.s=smtpapi header.b=sHZILhkM;       spf=pass (google.com: domain of bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com designates 198.37.152.180 as permitted sender) smtp.mailfrom=\"bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com\";       dmarc=pass (p=QUARANTINE sp=QUARANTINE dis=NONE) header.from=email.postman.com"
          },
          {
            "name": "DKIM-Signature",
            "value": "v=1; a=rsa-sha256; c=relaxed/relaxed; d=email.postman.com; h=content-transfer-encoding:content-type:from:mime-version:subject: reply-to:list-unsubscribe:list-unsubscribe-post:to:cc:content-type:feedback-id: from:subject:to; s=ifn; bh=zRDA4kJ4pe+GVq1LoDnkOXPMvc6s5HyibOgHEghVg+Q=; b=kgEagqoDVWgd1RBN4+zOpJSjaxbFAIlEit93D5HG4x0ZV/nP/H8FQZ8NosvLLz/9yRPY JYNlnL6WD/dM0FLuqzyrttNufzrt0yEXEaWdILaIdlbBHS9oJJeIVDxT+YViVl/o1fPXmS RC7ht6YcpoSH+0rY397BK8T1HClHuVODHrsTtkH14pRq3MBkL1+7zIlhewvlwGud38Ux74 G4aAdRAB3tdtrgqz+eLi84N+XKrFLGlqRKxmTSkOkPHgp0U4R9EmSA3dWXZQdA+QSHTDcf pYMjYw3or6mxx2FsLpmNqGNRDD9DqZ8un8OpB6DFulzFmVTBqGaiJKWQdeBMuWPA=="
          },
          {
            "name": "DKIM-Signature",
            "value": "v=1; a=rsa-sha256; c=relaxed/relaxed; d=sendgrid.info; h=content-transfer-encoding:content-type:from:mime-version:subject: reply-to:list-unsubscribe:list-unsubscribe-post:to:cc:content-type:feedback-id: from:subject:to; s=smtpapi; bh=zRDA4kJ4pe+GVq1LoDnkOXPMvc6s5HyibOgHEghVg+Q=; b=sHZILhkMpdOoBY1+dIeClhAdnF5TMojT30FoteHWeUPIQZ79g42e5P8AYsdiPbL8DN93 GxPi2HK+r7HLcIM1Lr2Z++GqRvaIB7NXnF3fMlftQoU/ojzhUWL1//cKZ9V7+x44+C4S0a KgxgNmBeEnOp9cJabOGBuvaIF6Wa5sdMA="
          },
          {
            "name": "Received",
            "value": "by recvd-9fbc8bcc7-s4f6l with SMTP id recvd-9fbc8bcc7-s4f6l-1-6851F14C-4C 2025-06-17 22:50:52.71045116 +0000 UTC m=+1146014.724756470"
          },
          {
            "name": "Received",
            "value": "from MjIyMDg0NTI (unknown) by geopod-ismtpd-7 (SG) with HTTP id fcv5ejESR9yK8gcMstDq-g Tue, 17 Jun 2025 22:50:52.676 +0000 (UTC)"
          },
          {
            "name": "Content-Transfer-Encoding",
            "value": "quoted-printable"
          },
          {
            "name": "Content-Type",
            "value": "text/html; charset=utf-8"
          },
          {
            "name": "Date",
            "value": "Tue, 17 Jun 2025 22:50:52 +0000 (UTC)"
          },
          {
            "name": "From",
            "value": "The Postman Team <postcon@email.postman.com>"
          },
          {
            "name": "Mime-Version",
            "value": "1.0"
          },
          {
            "name": "Message-ID",
            "value": "<fcv5ejESR9yK8gcMstDq-g@geopod-ismtpd-7>"
          },
          {
            "name": "Subject",
            "value": "Postman product updates for faster API delivery"
          },
          {
            "name": "Reply-To",
            "value": "postcon@email.postman.com"
          },
          {
            "name": "List-Unsubscribe",
            "value": "<https://tracking.inflection.io/42a0e188f5033bc65bf8d78622277c4e/gAAAAABoUfFMHM4dqY8CcOydcSWGZyQq9zTCejjhhTld7CemgJPF1iW2YISZHabhSBL217i5TxACyeUnhfVH4VSxbtkhkXMuFu6JWTIb5mdpFierEFN-lo0tVReMioOrFZ-Ma1WJYVH2gk6L_kHO3FTgQgb06fiDJT_fuAV20Sq_rZVmeu-wS34Z6UQ4NrnOdaMyMfnCmjkCo49t7z4Hwst4nXUgw26ptiGEwKKhAJNFn8z-RfDGwvJbiDCmytmGf05SwF87HeyYpKBGX22YbpA2SDyGjwJic1_sB_UxZqvxeWNOX-3TR84_4N9Jnh23pNWFWF6qR_6gDM9deZRhfEIJq5BrTVIJrUNkcrsV47f9Nr0Y-E3Nph_2t69ZaNJwL1Ad6ZtrB4ZEwPM1Qbvam7OPYx_80ZA4O_QY6LGExB-sU8nYeabUM0cVV6zCMJjpp4_v4y1S4TqGTGsfiS0u1O2ImOPDbh5v_IhyCpPNeP04BZlfFYsA_-xLRQ_wr0vCWFi8Tv5Y961fSMp9aBvRI1iQ5IEBKPcvTfJbfrVfluqHdInjBAaRDSTCU4CdjNB8xLWqDwV20xJgDFHV1xxTzKB9sNYqJn_8e1hNmprvIq8DJTPXipJTaG-sqM7qzZnNGEEPTXqEQD649WXQm_SJSLi8-FXPaZOp_RZyynHmHFtaZQMktIGbHMlFVXPoVNusmG1mqOU_6AOy57B2la5m5Ybo36Wpn-oBtn-0fJpGjpOlYkzPJ3OoWBK22OXwKy9Pf1Tu8ZT_KJmsbbF18wNTrq0Nx7saxMaIO7ek8ZGoyPAcAQYZZYLHVOkN2kTH8aFzGiuqGcPST5gCSDQTRYHcYF5028uvY-dj56-bO49k-Z8beZkb0MlNDqKviUFDITUh5cpaE_9HJbUWGMTL9faBcy2z9t4bDyrsJ-AeU1Rh9ikNvxrijtaMNqA=/redirect?redirect=https://app.inflection.io/unsubscribed>"
          },
          {
            "name": "List-Unsubscribe-Post",
            "value": "List-Unsubscribe=One-Click"
          },
          {
            "name": "X-SG-EID",
            "value": "u001.qs1UDU55aYq2MsQQ2fblEmIJwui8qcd4JEf4lJKCFuIWQgFZgFCERl6Th+y+vSPUhIQf4Na1V8f+M1QOQ90GSuECvgyipVTjc2BwCWPRJtoZBir4imLLzdNijR/yg5f2Xwl2WsoRRWn9mhAhb2Gst6Hjjtr2ilfN20FL/RpZ3acdY+1Z07KDkS+7zxSHEKXPUi2TSlFNXCZJjpYDt14yqljM/Mn0k9nbVYcPeG4P4k+lIVc7biiCIcF+iY+2THQI"
          },
          {
            "name": "X-SG-ID",
            "value": "u001.SdBcvi+Evd/bQef8eZF3Bqotr1bAVDid1UPbQYQi7+vdBCw3c+VgrdrsaZS0mOnrW+IfYqcaJN04TrkQdRVM0bCdPc00DhDoVvB7Nvd5RJQ9zHml0TMolicOktz7qW5QZdWR0QQcNZhm5hNdJ6YrIon/9zwt9VubuPLQxfugJOrMS1+mMmGrOmEhGnlnVdqeetIgxrsB2+lP8eBPwMbLZ5LIqxk0MtF/MqoSiC55kMtlYsh0J7OMoiROJrSiukGuA7qIrJbaRmFrFr6uu48H06R9e4K4pqR1ARP85IBIRDi6leDqyRmAPvhgzLRlQv65QfWhPpr/yxuEGveAOMbGiQvLQ3HRORq6MJ7Z+0pGUt69hq7e+FyBASmLmNvNoV67ZrVSBejM7/oPkw58JLrLnkDmVD+9jBT0KL9QbeFGp5ksH8xYzED0mTduDR6wtDV7+JUc0iw4PBleaEHxjJk0I3mX9rH76Qpkb7FnfYR8hmGMRfKBb+NJ3K/GEI+9hhY/cp6iviokbMXSrA44+hfSOIercpjZDmXbsnKsd4MBGxIl0Zc6lLYmMH1iKET7+5AOldLJ+WjtjFArAC8zcIO+WLyiXfsQ/EEOTd2PtcarVSnolxGAj4vVXOC7XX8GT/uCVw4lvV2R5lbbnMmR/wcyXTQxhRh4M9EdAj8gRBy8zakbGUL3bvEKVhE2Zfrcz4bz5LGrHAAjVC/UzgW5wbhnzA=="
          },
          {
            "name": "To",
            "value": "bbayarbileg@gmail.com"
          },
          {
            "name": "X-Entity-ID",
            "value": "u001.mjBfs1wEWvWu0XyAAAJFkw=="
          }
        ],
        "body": {
          "size": 32266,
          "data": ""
        }
      },
      "sizeEstimate": 42990,
      "historyId": "4893271",
      "internalDate": "1750200652000"
    }
  }
]
2025-06-18T01:30:12.671Z [LOG] 18.06.2025, 03:30:12.668: Sanitized results for interpreter: [
  {
    "success": true,
    "message": null,
    "error": null,
    "event": null,
    "data": null,
    "query": null,
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": [
      {
        "id": "19780169ac71ad46",
        "threadId": "19780169ac71ad46"
      }
    ],
    "total": 1,
    "result": null,
    "message_id": null
  },
  {
    "success": true,
    "message": {
      "id": "19780169ac71ad46",
      "threadId": "19780169ac71ad46",
      "labelIds": [
        "CATEGORY_PROMOTIONS",
        "INBOX"
      ],
      "snippet": "Use Postman Collections, GitHub sync, and VS Code to build and ship APIs more efficiently.‌ ‌ ‌ Hey there, At our recent user conference, POST/CON 25, we unveiled new tools to streamline how you design",
      "payload": {
        "partId": "",
        "mimeType": "text/html",
        "filename": "",
        "headers": [
          {
            "name": "Delivered-To",
            "value": "bbayarbileg@gmail.com"
          },
          {
            "name": "Received",
            "value": "by 2002:a05:7412:820e:b0:15e:7a46:624 with SMTP id v14csp2844236rdf;        Tue, 17 Jun 2025 15:50:54 -0700 (PDT)"
          },
          {
            "name": "X-Google-Smtp-Source",
            "value": "AGHT+IFM+1FlY+r8mHbhawD15LIxF5AiyekCCTUsV+SsEE7wNOfZN2MsMSruTqdIZuvhr68RUcUw"
          },
          {
            "name": "X-Received",
            "value": "by 2002:a05:620a:45a4:b0:7d0:9be0:2e35 with SMTP id af79cd13be357-7d3c6c0d381mr2231714985a.10.1750200654605;        Tue, 17 Jun 2025 15:50:54 -0700 (PDT)"
          },
          {
            "name": "ARC-Seal",
            "value": "i=1; a=rsa-sha256; t=1750200654; cv=none;        d=google.com; s=arc-20240605;        b=c42MK4RVpuInpbAf7EppgLHch1MwkbF5XSbhADK2pIK1Sz7fu/7svyVSS5dMOxArmR         TGH35bCIBDKwwMh0C5NSLMtUX/sN/shJKep+LR2MJB5JiHChoRwGHEGXgXY1fV6cBIzK         y3G8+HyDoJ5yeefZzT5B4T1YD2ZL1giAOpGpndWfTA0QO/q6HqLm3LDo7snM9F9wZw4i         cNQjsWTi/L7iyX4wt8psHV182e7MCJReu0QaH9yrqsS5a9pvWMGQADMD9IuYFa3NvqBF         ELwMNeeeh2RkDFUtqbRw5zotsdDWyucSthlM4KHvFxg1sJ1qsoHIDIF3FGZfcBxFDbTo         0Fkg=="
          },
          {
            "name": "ARC-Message-Signature",
            "value": "i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20240605;        h=to:list-unsubscribe-post:list-unsubscribe:reply-to:subject         :message-id:mime-version:from:date:content-transfer-encoding         :dkim-signature:dkim-signature;        bh=zRDA4kJ4pe+GVq1LoDnkOXPMvc6s5HyibOgHEghVg+Q=;        fh=5n8dPPTZN0hKIU1FKUWXFE0nNB5SmvVwV53c5m/RTVI=;        b=lCIiCdbOqW+lZ477YvIaeayH05WqSLOwq8J1cDrFvOrt4Kxu5pGuMOjIAsIL0k1zDY         HrFYpUEKCYfqH+INLcTqdfA72Qfz38NHYEzDLPVas4lNrc5FFEhZunJJs8SQiOGIeFnm         bRpEuHceCZIWadYmPFlF1cJ6K7l3TVGK0dP6NVV8+N6HOcrKqIrKQIT4K6hZ5As/YNhi         ranYnJulfpJBDXCsh0h0DmEJCAxpIw3Xa28mzD5Z6C2Hyhy8yzvtTWZ6ZVcUn9fwLCmv         k2zcj8HbOU+Gozg4kH2T9PixDvqEQM0/ugvYBrTCeiwrqhuuXFXFg4dH73RPttU45roY         B46Q==;        dara=google.com"
          },
          {
            "name": "ARC-Authentication-Results",
            "value": "i=1; mx.google.com;       dkim=pass header.i=@email.postman.com header.s=ifn header.b=kgEagqoD;       dkim=pass header.i=@sendgrid.info header.s=smtpapi header.b=sHZILhkM;       spf=pass (google.com: domain of bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com designates 198.37.152.180 as permitted sender) smtp.mailfrom=\"bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com\";       dmarc=pass (p=QUARANTINE sp=QUARANTINE dis=NONE) header.from=email.postman.com"
          },
          {
            "name": "Return-Path",
            "value": "<bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com>"
          },
          {
            "name": "Received",
            "value": "from o1.ptr3333.inflection.io (o1.ptr3333.inflection.io. [198.37.152.180])        by mx.google.com with ESMTPS id af79cd13be357-7d3b8edb197si1286729985a.376.2025.06.17.15.50.53        for <bbayarbileg@gmail.com>        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);        Tue, 17 Jun 2025 15:50:54 -0700 (PDT)"
          },
          {
            "name": "Received-SPF",
            "value": "pass (google.com: domain of bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com designates 198.37.152.180 as permitted sender) client-ip=198.37.152.180;"
          },
          {
            "name": "Authentication-Results",
            "value": "mx.google.com;       dkim=pass header.i=@email.postman.com header.s=ifn header.b=kgEagqoD;       dkim=pass header.i=@sendgrid.info header.s=smtpapi header.b=sHZILhkM;       spf=pass (google.com: domain of bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com designates 198.37.152.180 as permitted sender) smtp.mailfrom=\"bounces+22208452-da3c-bbayarbileg=gmail.com@em1938.email.postman.com\";       dmarc=pass (p=QUARANTINE sp=QUARANTINE dis=NONE) header.from=email.postman.com"
          },
          {
            "name": "DKIM-Signature",
            "value": "v=1; a=rsa-sha256; c=relaxed/relaxed; d=email.postman.com; h=content-transfer-encoding:content-type:from:mime-version:subject: reply-to:list-unsubscribe:list-unsubscribe-post:to:cc:content-type:feedback-id: from:subject:to; s=ifn; bh=zRDA4kJ4pe+GVq1LoDnkOXPMvc6s5HyibOgHEghVg+Q=; b=kgEagqoDVWgd1RBN4+zOpJSjaxbFAIlEit93D5HG4x0ZV/nP/H8FQZ8NosvLLz/9yRPY JYNlnL6WD/dM0FLuqzyrttNufzrt0yEXEaWdILaIdlbBHS9oJJeIVDxT+YViVl/o1fPXmS RC7ht6YcpoSH+0rY397BK8T1HClHuVODHrsTtkH14pRq3MBkL1+7zIlhewvlwGud38Ux74 G4aAdRAB3tdtrgqz+eLi84N+XKrFLGlqRKxmTSkOkPHgp0U4R9EmSA3dWXZQdA+QSHTDcf pYMjYw3or6mxx2FsLpmNqGNRDD9DqZ8un8OpB6DFulzFmVTBqGaiJKWQdeBMuWPA=="
          },
          {
            "name": "DKIM-Signature",
            "value": "v=1; a=rsa-sha256; c=relaxed/relaxed; d=sendgrid.info; h=content-transfer-encoding:content-type:from:mime-version:subject: reply-to:list-unsubscribe:list-unsubscribe-post:to:cc:content-type:feedback-id: from:subject:to; s=smtpapi; bh=zRDA4kJ4pe+GVq1LoDnkOXPMvc6s5HyibOgHEghVg+Q=; b=sHZILhkMpdOoBY1+dIeClhAdnF5TMojT30FoteHWeUPIQZ79g42e5P8AYsdiPbL8DN93 GxPi2HK+r7HLcIM1Lr2Z++GqRvaIB7NXnF3fMlftQoU/ojzhUWL1//cKZ9V7+x44+C4S0a KgxgNmBeEnOp9cJabOGBuvaIF6Wa5sdMA="
          },
          {
            "name": "Received",
            "value": "by recvd-9fbc8bcc7-s4f6l with SMTP id recvd-9fbc8bcc7-s4f6l-1-6851F14C-4C 2025-06-17 22:50:52.71045116 +0000 UTC m=+1146014.724756470"
          },
          {
            "name": "Received",
            "value": "from MjIyMDg0NTI (unknown) by geopod-ismtpd-7 (SG) with HTTP id fcv5ejESR9yK8gcMstDq-g Tue, 17 Jun 2025 22:50:52.676 +0000 (UTC)"
          },
          {
            "name": "Content-Transfer-Encoding",
            "value": "quoted-printable"
          },
          {
            "name": "Content-Type",
            "value": "text/html; charset=utf-8"
          },
          {
            "name": "Date",
            "value": "Tue, 17 Jun 2025 22:50:52 +0000 (UTC)"
          },
          {
            "name": "From",
            "value": "The Postman Team <postcon@email.postman.com>"
          },
          {
            "name": "Mime-Version",
            "value": "1.0"
          },
          {
            "name": "Message-ID",
            "value": "<fcv5ejESR9yK8gcMstDq-g@geopod-ismtpd-7>"
          },
          {
            "name": "Subject",
            "value": "Postman product updates for faster API delivery"
          },
          {
            "name": "Reply-To",
            "value": "postcon@email.postman.com"
          },
          {
            "name": "List-Unsubscribe",
            "value": "<https://tracking.inflection.io/42a0e188f5033bc65bf8d78622277c4e/gAAAAABoUfFMHM4dqY8CcOydcSWGZyQq9zTCejjhhTld7CemgJPF1iW2YISZHabhSBL217i5TxACyeUnhfVH4VSxbtkhkXMuFu6JWTIb5mdpFierEFN-lo0tVReMioOrFZ-Ma1WJYVH2gk6L_kHO3FTgQgb06fiDJT_fuAV20Sq_rZVmeu-wS34Z6UQ4NrnOdaMyMfnCmjkCo49t7z4Hwst4nXUgw26ptiGEwKKhAJNFn8z-RfDGwvJbiDCmytmGf05SwF87HeyYpKBGX22YbpA2SDyGjwJic1_sB_UxZqvxeWNOX-3TR84_4N9Jnh23pNWFWF6qR_6gDM9deZRhfEIJq5BrTVIJrUNkcrsV47f9Nr0Y-E3Nph_2t69ZaNJwL1Ad6ZtrB4ZEwPM1Qbvam7OPYx_80ZA4O_QY6LGExB-sU8nYeabUM0cVV6zCMJjpp4_v4y1S4TqGTGsfiS0u1O2ImOPDbh5v_IhyCpPNeP04BZlfFYsA_-xLRQ_wr0vCWFi8Tv5Y961fSMp9aBvRI1iQ5IEBKPcvTfJbfrVfluqHdInjBAaRDSTCU4CdjNB8xLWqDwV20xJgDFHV1xxTzKB9sNYqJn_8e1hNmprvIq8DJTPXipJTaG-sqM7qzZnNGEEPTXqEQD649WXQm_SJSLi8-FXPaZOp_RZyynHmHFtaZQMktIGbHMlFVXPoVNusmG1mqOU_6AOy57B2la5m5Ybo36Wpn-oBtn-0fJpGjpOlYkzPJ3OoWBK22OXwKy9Pf1Tu8ZT_KJmsbbF18wNTrq0Nx7saxMaIO7ek8ZGoyPAcAQYZZYLHVOkN2kTH8aFzGiuqGcPST5gCSDQTRYHcYF5028uvY-dj56-bO49k-Z8beZkb0MlNDqKviUFDITUh5cpaE_9HJbUWGMTL9faBcy2z9t4bDyrsJ-AeU1Rh9ikNvxrijtaMNqA=/redirect?redirect=https://app.inflection.io/unsubscribed>"
          },
          {
            "name": "List-Unsubscribe-Post",
            "value": "List-Unsubscribe=One-Click"
          },
          {
            "name": "X-SG-EID",
            "value": "u001.qs1UDU55aYq2MsQQ2fblEmIJwui8qcd4JEf4lJKCFuIWQgFZgFCERl6Th+y+vSPUhIQf4Na1V8f+M1QOQ90GSuECvgyipVTjc2BwCWPRJtoZBir4imLLzdNijR/yg5f2Xwl2WsoRRWn9mhAhb2Gst6Hjjtr2ilfN20FL/RpZ3acdY+1Z07KDkS+7zxSHEKXPUi2TSlFNXCZJjpYDt14yqljM/Mn0k9nbVYcPeG4P4k+lIVc7biiCIcF+iY+2THQI"
          },
          {
            "name": "X-SG-ID",
            "value": "u001.SdBcvi+Evd/bQef8eZF3Bqotr1bAVDid1UPbQYQi7+vdBCw3c+VgrdrsaZS0mOnrW+IfYqcaJN04TrkQdRVM0bCdPc00DhDoVvB7Nvd5RJQ9zHml0TMolicOktz7qW5QZdWR0QQcNZhm5hNdJ6YrIon/9zwt9VubuPLQxfugJOrMS1+mMmGrOmEhGnlnVdqeetIgxrsB2+lP8eBPwMbLZ5LIqxk0MtF/MqoSiC55kMtlYsh0J7OMoiROJrSiukGuA7qIrJbaRmFrFr6uu48H06R9e4K4pqR1ARP85IBIRDi6leDqyRmAPvhgzLRlQv65QfWhPpr/yxuEGveAOMbGiQvLQ3HRORq6MJ7Z+0pGUt69hq7e+FyBASmLmNvNoV67ZrVSBejM7/oPkw58JLrLnkDmVD+9jBT0KL9QbeFGp5ksH8xYzED0mTduDR6wtDV7+JUc0iw4PBleaEHxjJk0I3mX9rH76Qpkb7FnfYR8hmGMRfKBb+NJ3K/GEI+9hhY/cp6iviokbMXSrA44+hfSOIercpjZDmXbsnKsd4MBGxIl0Zc6lLYmMH1iKET7+5AOldLJ+WjtjFArAC8zcIO+WLyiXfsQ/EEOTd2PtcarVSnolxGAj4vVXOC7XX8GT/uCVw4lvV2R5lbbnMmR/wcyXTQxhRh4M9EdAj8gRBy8zakbGUL3bvEKVhE2Zfrcz4bz5LGrHAAjVC/UzgW5wbhnzA=="
          },
          {
            "name": "To",
            "value": "bbayarbileg@gmail.com"
          },
          {
            "name": "X-Entity-ID",
            "value": "u001.mjBfs1wEWvWu0XyAAAJFkw=="
          }
        ],
        "body": {
          "size": 32266,
          "data": ""
        }
      },
      "sizeEstimate": 42990,
      "historyId": "4893271",
      "internalDate": "1750200652000"
    },
    "error": null,
    "event": null,
    "data": null,
    "query": null,
    "url": null,
    "company": null,
    "details": null,
    "migration_description": null,
    "sql_statements": null,
    "messages": null,
    "total": null,
    "result": null,
    "message_id": null
  }
]
2025-06-18T01:30:12.672Z [LOG] 18.06.2025, 03:30:12.672: Interpreting results for user summary...
2025-06-18T01:30:17.054Z [LOG] 18.06.2025, 03:30:17.053: Interpreter summary: There is 1 message matching your query. Here are the details:

Subject: Postman product updates for faster API delivery  
From: The Postman Team <postcon@email.postman.com>  
Date: Tue, 17 Jun 2025 22:50:52 +0000 (UTC)

Summary:  
This is a product update from Postman announcing new tools for more efficient API development, including updates to Postman Collections, GitHub integration, and VS Code. The email highlights features and improvements unveiled at POST/CON 25, aiming to streamline how you design, test, and ship APIs.
2025-06-18T01:30:17.058Z [LOG] 18.06.2025, 03:30:17.057: [BOT] Response from API for chatId 1931272012: "There is 1 message matching your query. Here are the details:

Subject: Postman product updates for faster API delivery  
From: The Postman Team <postcon@email.postman.com>  
Date: Tue, 17 Jun 2025 22:50:52 +0000 (UTC)

Summary:  
This is a product update from Postman announcing new tools for more efficient API development, including updates to Postman Collections, GitHub integration, and VS Code. The email highlights features and improvements unveiled at POST/CON 25, aiming to streamline how you design, test, and ship APIs."
